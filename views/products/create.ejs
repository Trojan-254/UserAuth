<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create New Product | Zetu Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .image-preview {
            width: 150px;
            height: 150px;
            object-fit: cover;
        }
        
        .error-message {
            display: none;
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        
        .loading-spinner {
            display: none;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #ef4444;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .form-card {
            transition: all 0.3s ease;
        }

        .form-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        .input-group {
            position: relative;
            transition: all 0.3s ease;
        }

        .form-section {
            background: white;
            border-radius: 1rem;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="min-h-screen">
        <div class="container mx-auto px-4 py-8">
            <!-- Header -->
            <div class="mb-8 text-center md:text-left">
                <h1 class="text-4xl font-extrabold text-gray-900 mb-2">Create New Product</h1>
                <p class="text-gray-600 text-lg">Fill in the details below to list your product on Zetu Cart</p>
            </div>

            <!-- Form -->
            <form id="productForm" class="max-w-5xl mx-auto space-y-8" enctype="multipart/form-data">
                <!-- Basic Information -->
                <div class="form-section">
                    <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                        <i class="fas fa-info-circle mr-2 text-red-500"></i>
                        Basic Information
                    </h2>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Product Name -->
                        <div class="input-group">
                            <label for="name" class="block text-sm font-semibold text-gray-700 mb-1">
                                Product Name*
                            </label>
                            <input type="text" 
                                   id="name" 
                                   name="name" 
                                   required
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent transition duration-150 ease-in-out"
                                   placeholder="Enter product name">
                            <span class="error-message" id="nameError"></span>
                        </div>

                        <!-- SKU -->
                        <div class="input-group">
                            <label for="sku" class="block text-sm font-semibold text-gray-700 mb-1">
                                SKU (Stock Keeping Unit)*
                            </label>
                            <input type="text" 
                                   id="sku" 
                                   name="sku" 
                                   required
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent transition duration-150 ease-in-out"
                                   placeholder="Enter product SKU">
                            <span class="error-message" id="skuError"></span>
                        </div>

                        <!-- Category -->
                        <div class="input-group">
                            <label for="category" class="block text-sm font-semibold text-gray-700 mb-1">
                                Category*
                            </label>
                            <select id="category" 
                                    name="category" 
                                    required
                                    class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent appearance-none bg-white">
                                <option value="">Select a category</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }) %>
                            </select>
                            <span class="error-message" id="categoryError"></span>
                        </div>

                        <!-- Price -->
                        <div class="input-group">
                            <label for="price" class="block text-sm font-semibold text-gray-700 mb-1">
                                Price (KES)*
                            </label>
                            <div class="relative">
                                <span class="absolute left-3 top-3 text-gray-500">KES</span>
                                <input type="number" 
                                       id="price" 
                                       name="price" 
                                       required
                                       min="0"
                                       step="0.01"
                                       class="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                                       placeholder="0.00">
                            </div>
                            <span class="error-message" id="priceError"></span>
                        </div>

                        <!-- Sale Price -->
                        <div class="input-group">
                            <label for="salePrice" class="block text-sm font-semibold text-gray-700 mb-1">
                                Sale Price (KES)
                            </label>
                            <div class="relative">
                                <span class="absolute left-3 top-3 text-gray-500">KES</span>
                                <input type="number" 
                                       id="salePrice" 
                                       name="salePrice"
                                       min="0"
                                       step="0.01"
                                       class="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                                       placeholder="0.00">
                            </div>
                            <span class="error-message" id="salePriceError"></span>
                        </div>

                        <!-- Stock -->
                        <div class="input-group">
                            <label for="stock" class="block text-sm font-semibold text-gray-700 mb-1">
                                Stock Quantity*
                            </label>
                            <input type="number" 
                                   id="stock" 
                                   name="stock" 
                                   required
                                   min="0"
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                                   placeholder="0">
                            <span class="error-message" id="stockError"></span>
                        </div>

                        <!-- Weight -->
                        <div class="input-group">
                            <label for="weight" class="block text-sm font-semibold text-gray-700 mb-1">
                                Weight (kg)
                            </label>
                            <input type="number" 
                                   id="weight" 
                                   name="weight"
                                   min="0"
                                   step="0.1"
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                                   placeholder="0.0">
                            <span class="error-message" id="weightError"></span>
                        </div>
                    </div>
                </div>

                <!-- Description -->
                <div class="form-section">
                    <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                        <i class="fas fa-align-left mr-2 text-red-500"></i>
                        Description
                    </h2>
                    <div>
                        <label for="description" class="block text-sm font-semibold text-gray-700 mb-1">
                            Product Description*
                        </label>
                        <textarea id="description" 
                                  name="description" 
                                  required
                                  rows="4"
                                  class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                                  placeholder="Describe your product..."></textarea>
                        <span class="error-message" id="descriptionError"></span>
                    </div>
                </div>

                <!-- Images -->
                <div class="form-section">
                    <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center">
                        <i class="fas fa-images mr-2 text-red-500"></i>
                        Product Images
                    </h2>
                    
                    <!-- Main Image -->
                    <div class="mb-6">
                        <label class="block text-sm font-semibold text-gray-700 mb-2">Main Image*</label>
                        <div class="flex items-center space-x-4">
                            <div class="relative">
                                <img id="mainImagePreview" 
                                     src="/api/placeholder/150/150" 
                                     alt="Main image preview" 
                                     class="image-preview rounded-lg border">
                                <button type="button" 
                                        id="removeMainImage" 
                                        class="absolute top-2 right-2 bg-red-500 text-white rounded-full p-1 hidden hover:bg-red-600 transition-colors">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                            <div class="flex-1">
                                <label class="block w-full cursor-pointer">
                                    <span class="sr-only">Choose main image</span>
                                    <input type="file" 
                                           multiple
                                           id="imageUpload" 
                                           name="mainImage" 
                                           accept="image/*"
                                           required
                                           class="block w-full text-sm text-gray-500
                                                  file:mr-4 file:py-2 file:px-4
                                                  file:rounded-full file:border-0
                                                  file:text-sm file:font-semibold
                                                  file:bg-red-50 file:text-red-700
                                                  hover:file:bg-red-100"
                                            onchange="previewImage(this, 'mainImagePreview')">
                                </label>
                                <p class="text-xs text-gray-500 mt-1">Click to upload an image or drag and drop</p>
                                <p class="text-xs text-gray-500 mt-1">PNG, JPG up to 5MB</p>
                                <span class="error-message" id="mainImageError"></span>
                            </div>
                        </div>
                    </div>

                    <!-- Additional Images -->
                    <div>
                        <label class="block text-sm font-semibold text-gray-700 mb-2">Additional Images</label>
                        <div id="additionalImagesPreview" class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-4"></div>
                        <label class="block w-full cursor-pointer">
                            <span class="sr-only">Choose additional images</span>
                            <input type="file" 
                                   id="additionalImages" 
                                   name="additionalImages" 
                                   accept="image/*"
                                   multiple
                                   class="block w-full text-sm text-gray-500
                                          file:mr-4 file:py-2 file:px-4
                                          file:rounded-full file:border-0
                                          file:text-sm file:font-semibold
                                          file:bg-red-50 file:text-red-700
                                          hover:file:bg-red-100"
                                    onchange="previewMultipleImages(this, 'additionalPreviews')">
                        </label>
                        <p class="text-xs text-gray-500 mt-1">Up to 4 additional images</p>
                        <span class="error-message" id="additionalImagesError"></span>
                    </div>
                </div>

                <!-- Submit Button -->
                <div class="flex justify-end">
                    <button type="submit" 
                            class="bg-red-500 text-white px-8 py-4 rounded-lg hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transform transition-transform duration-150 hover:scale-105 flex items-center space-x-2">
                        <span id="submitText" class="font-semibold">Create Product</span>
                        <i class="fas fa-arrow-right"></i>
                        <div id="submitSpinner" class="loading-spinner"></div>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Toast Notification -->
    <div id="toast" 
         class="fixed bottom-4 right-4 bg-gray-900 text-white px-6 py-3 rounded-lg shadow-lg transform translate-y-full opacity-0 transition-all duration-300 flex items-center space-x-2">
        <i class="fas fa-info-circle"></i>
        <span></span>
    </div>

    <script>
        const productForm = {
            init() {
                this.form = document.getElementById('productForm');
                this.mainImageInput = document.getElementById('mainImage');
                this.additionalImagesInput = document.getElementById('additionalImages');
                this.mainImagePreview = document.getElementById('mainImagePreview');
                this.removeMainImageBtn = document.getElementById('removeMainImage');
                this.additionalImagesPreview = document.getElementById('additionalImagesPreview');
                this.submitBtn = this.form.querySelector('button[type="submit"]');
                this.submitText = document.getElementById('submitText');
                this.submitSpinner = document.getElementById('submitSpinner');
                
                this.setupEventListeners();
            },
    
            setupEventListeners() {
                this.form.addEventListener('submit', this.handleSubmit.bind(this));
                this.mainImageInput.addEventListener('change', this.handleMainImageChange.bind(this));
                this.additionalImagesInput.addEventListener('change', this.handleAdditionalImagesChange.bind(this));
                this.removeMainImageBtn.addEventListener('click', this.handleRemoveMainImage.bind(this));
            },
    
            async handleSubmit(event) {
                event.preventDefault();
                
                if (!this.validateForm()) {
                    return;
                }
    
                this.setLoadingState(true);
    
                try {
                    const formData = new FormData(this.form);
                    console.log('Form data:', formData);
                    
                    const response = await fetch('/products/create-new', {
                        method: 'POST',
                        body: formData
                    });
    
                    const result = await response.json();
                    console.log('Response:', result);
    
                    if (response.ok) {
                        this.showToast('Product created successfully!', 'success');
                        // Redirect to dashboard after a short delay
                        setTimeout(() => {
                            window.location.href = '/api/seller/products';
                        }, 1500);
                    } else {
                        throw new Error(result.message || 'Failed to create product');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    this.showToast(error.message, 'error');
                    this.setLoadingState(false);
                }
            },
    
            validateForm() {
                let isValid = true;
    
                // Clear previous error messages
                document.querySelectorAll('.error-message').forEach((el) => {
                    el.style.display = 'none';
                });
    
                // Validate Product Name
                const name = this.form.name.value.trim();
                if (!name) {
                    document.getElementById('nameError').textContent = 'Product name is required.';
                    document.getElementById('nameError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate SKU
                const sku = this.form.sku.value.trim();
                if (!sku) {
                    document.getElementById('skuError').textContent = 'SKU is required.';
                    document.getElementById('skuError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate Category
                const category = this.form.category.value;
                if (!category) {
                    document.getElementById('categoryError').textContent = 'Category is required.';
                    document.getElementById('categoryError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate Price
                const price = this.form.price.value.trim();
                if (!price || price <= 0) {
                    document.getElementById('priceError').textContent = 'Price must be greater than 0.';
                    document.getElementById('priceError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate Sale Price (if provided)
                const salePrice = this.form.salePrice.value.trim();
                if (salePrice && parseFloat(salePrice) >= parseFloat(price)) {
                    document.getElementById('salePriceError').textContent = 'Sale price must be less than regular price.';
                    document.getElementById('salePriceError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate Stock
                const stock = this.form.stock.value.trim();
                if (!stock || stock < 0) {
                    document.getElementById('stockError').textContent = 'Stock must be 0 or more.';
                    document.getElementById('stockError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate Description
                const description = this.form.description.value.trim();
                if (!description) {
                    document.getElementById('descriptionError').textContent = 'Description is required.';
                    document.getElementById('descriptionError').style.display = 'block';
                    isValid = false;
                }
    
                // Validate Main Image
                // if (!this.mainImageInput.files.length) {
                //     document.getElementById('mainImageError').textContent = 'Main image is required.';
                //     document.getElementById('mainImageError').style.display = 'block';
                //     isValid = false;
                // }
    
                return isValid;
            },

    
            handleMainImageChange(event) {
                const preview = document.getElementById('previewId');
                const file = event.target.files[0];
                if (file) {
                    if (file.size > 5 * 1024 * 1024) {
                        this.showToast('Image size should not exceed 5MB', 'error');
                        event.target.value = '';
                        return;
                    }
    
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        preview.innerHTML = `
                        <img src="${e.target.result}" class="mx-auto h-32 w-32 object-cover rounded-lg">
                    `;
                    };
                    reader.readAsDataURL(file);
                }
            },
    
            handleAdditionalImagesChange(event) {
                this.additionalImagesPreview.innerHTML = '';
                Array.from(event.target.files).forEach((file, index) => {
                    if (index < 4) {
                        if (file.size > 5 * 1024 * 1024) {
                            this.showToast(`Image ${file.name} exceeds 5MB limit`, 'error');
                            return;
                        }
    
                        const reader = new FileReader();
                        reader.onload = (e) => {
                            const img = document.createElement('img');
                            img.src = e.target.result;
                            img.classList.add('image-preview', 'rounded-lg', 'border');
                            this.additionalImagesPreview.appendChild(img);
                        };
                        reader.readAsDataURL(file);
                    }
                });
            },
    
            handleRemoveMainImage() {
                this.mainImageInput.value = '';
                this.mainImagePreview.src = '/api/placeholder/150/150';
                this.removeMainImageBtn.classList.add('hidden');
            },
    
            setLoadingState(isLoading) {
                this.submitText.style.display = isLoading ? 'none' : 'inline';
                this.submitSpinner.style.display = isLoading ? 'block' : 'none';
                this.submitBtn.disabled = isLoading;
            },
    
            showToast(message, type = 'info') {
                const toast = document.getElementById('toast');
                toast.querySelector('span').textContent = message;
                toast.classList.remove('bg-gray-900', 'bg-red-600', 'bg-green-600');
                toast.classList.add(type === 'success' ? 'bg-green-600' : 'bg-red-600');
                toast.style.opacity = '1';
                toast.style.transform = 'translateY(0)';
    
                setTimeout(() => {
                    toast.style.opacity = '0';
                    toast.style.transform = 'translateY(100%)';
                }, 3000);
            },
    
            resetForm() {
                this.form.reset();
                this.handleRemoveMainImage();
                this.additionalImagesPreview.innerHTML = '';
                document.querySelectorAll('.error-message').forEach(el => {
                    el.style.display = 'none';
                });
            }
        };
    
        document.addEventListener('DOMContentLoaded', () => {
            productForm.init();
        });
    </script>
</body>
</html>