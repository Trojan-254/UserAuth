<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seller Login - Zetu Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50">
    <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-lg w-full bg-white p-8 rounded-lg shadow-lg space-y-8">
            <div class="text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-16 w-16 text-orange-600" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"/>
                </svg>
                <h2 class="mt-6 text-3xl font-extrabold text-gray-900">Seller Login</h2>
                <p class="mt-2 text-sm text-gray-600">
                    Or
                    <a href="/seller/register" class="font-medium text-orange-600 hover:text-orange-500">
                        register as a new seller
                    </a>
                </p>
            </div>

            <% if (typeof errors !== 'undefined' && errors.length > 0) { %>
                <div class="bg-red-50 border-l-4 border-red-500 p-4 rounded-md">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <i class="fas fa-exclamation-circle text-red-500"></i>
                        </div>
                        <div class="ml-3">
                            <% errors.forEach(function(error) { %>
                                <p class="text-sm text-red-700"><%= error.msg %></p>
                            <% }); %>
                        </div>
                    </div>
                </div>
            <% } %>

            <form class="space-y-6" id="loginForm">
                <div class="space-y-4">
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700">Email address</label>
                        <input id="email" name="email" type="email" required 
                            class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-500 text-gray-900 focus:ring-orange-500 focus:border-orange-500 sm:text-sm" 
                            placeholder="Email address">
                    </div>
                    <div>
                        <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                        <input id="password" name="password" type="password" required 
                            class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-500 text-gray-900 focus:ring-orange-500 focus:border-orange-500 sm:text-sm" 
                            placeholder="Password">
                    </div>
                </div>

                <div class="flex items-center justify-between">
                    <div class="flex items-center">
                        <input id="remember-me" name="remember-me" type="checkbox" 
                            class="h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded">
                        <label for="remember-me" class="ml-2 block text-sm text-gray-900">
                            Remember me
                        </label>
                    </div>

                    <div class="text-sm">
                        <a href="/seller/forgot-password" id="forgotPasswordLink" class="font-medium text-orange-600 hover:text-orange-500">
                            Forgot your password?
                        </a>
                    </div>
                </div>

                <div>
                    <button type="submit" 
                        class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 shadow-lg">
                        <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                            <i class="fas fa-lock text-orange-500 group-hover:text-orange-400"></i>
                        </span>
                        Sign in
                    </button>
                </div>
            </form>
        </div>
    </div>



    <script>
        // DOM Elements
const elements = {
    loginForm: document.getElementById('loginForm'),
    forgotPasswordLink: document.getElementById('forgotPasswordLink'),
    forgotPasswordModal: document.getElementById('forgotPasswordModal'),
    closeModal: document.getElementById('closeModal'),
    emailInput: document.getElementById('email'),
    passwordInput: document.getElementById('password')
};

// Constants
const API_ENDPOINTS = {
    login: '/seller/auth/login'
};

const CLASSES = {
    modal: {
        visible: 'flex',
        hidden: 'hidden'
    },
    error: {
        container: 'bg-red-50 border-l-4 border-red-500 p-4 mb-4',
        icon: 'fas fa-exclamation-circle text-red-500',
        text: 'text-sm text-red-700'
    }
};

// Helper Functions
const toggleModal = (show = false) => {
    elements.forgotPasswordModal.classList.toggle(CLASSES.modal.hidden, !show);
    elements.forgotPasswordModal.classList.toggle(CLASSES.modal.visible, show);
};

const createErrorAlert = (message) => {
    const errorDiv = document.createElement('div');
    errorDiv.className = CLASSES.error.container;
    errorDiv.innerHTML = `
        <div class="flex">
            <div class="flex-shrink-0">
                <i class="${CLASSES.error.icon}"></i>
            </div>
            <div class="ml-3">
                <p class="${CLASSES.error.text}">${message}</p>
            </div>
        </div>
    `;
    return errorDiv;
};


// const handleLoginError = (message) => {
//     const existingError = elements.loginForm.previousElementSibling;
//     if (existingError?.classList.contains(CLASSES.error.container)) {
//         existingError.remove();
//     }
    
//     console.log('Displaying error:', message); 
//     const errorDiv = createErrorAlert(message);
//     elements.loginForm.parentNode.insertBefore(errorDiv, elements.loginForm);
// };

// API Functions
const loginUser = async (credentials) => {
    try {
        const response = await fetch(API_ENDPOINTS.login, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(credentials)
    });
    const data = response.json();
    
    if (!response.ok) {
        throw new Error(data.message || `HTTP error! status: ${response.status}`);
    }
    
    return data;
    } catch (error) {
        console.error('Login error:', error);
        throw error;
    }
};

// Event Handlers
const handleLogin = async (event) => {
    event.preventDefault();
    
    const credentials = {
        email: elements.emailInput.value.trim(),
        password: elements.passwordInput.value
    };
    
    try {
        const data = await loginUser(credentials);
        console.log('Login response:', data);
        
        if (data.statusCode === 200) {
            window.location.href = data.redirectUrl || '/seller/dashboard';
        } else {
            alert(data.message || 'An error occurred during login.');
        }
    } catch (error) {
        console.error('Login error:', error);
        handleLoginError('An error occurred during login. Please try again.');
    }
};

const handleForgotPasswordClick = (event) => {
    event.preventDefault();
    toggleModal(true);
};

const handleModalClose = () => {
    toggleModal(false);
};

const handleModalOutsideClick = (event) => {
    if (event.target === elements.forgotPasswordModal) {
        toggleModal(false);
    }
};


// Event Listeners
elements.loginForm.addEventListener('submit', handleLogin);
elements.forgotPasswordLink.addEventListener('click', handleForgotPasswordClick);
elements.closeModal.addEventListener('click', handleModalClose);
elements.forgotPasswordModal.addEventListener('click', handleModalOutsideClick);
    </script>
</body>
</html>