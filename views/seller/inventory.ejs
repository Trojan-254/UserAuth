<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Inventory - Zetucart Seller Dashboard</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50">
  <!-- Mobile Menu Button -->
  <button id="mobile-menu-button" class="lg:hidden fixed top-4 left-4 z-50 bg-blue-600 text-white p-2 rounded-lg">
    <i class="fas fa-bars"></i>
  </button>

  <div class="flex min-h-screen">
    <!-- Sidebar -->
    <aside id="sidebar" class="fixed lg:static w-64 -translate-x-full lg:translate-x-0 transition-transform duration-300 bg-gradient-to-b from-blue-600 to-blue-700 text-white p-6 shadow-xl flex flex-col h-screen z-40">
      <!-- Sidebar content here -->
      <div class="flex items-center mb-10">
        <i class="fas fa-store text-2xl mr-3"></i>
        <h2 class="text-2xl font-bold">Seller Portal</h2>
      </div>

      <nav class="space-y-2 flex-1">
        <a href="/seller/dashboard" class="flex items-center p-3 rounded-lg hover:bg-blue-500 transition-colors duration-200">
          <i class="fas fa-chart-line w-5 mr-3"></i>
          Dashboard
        </a>
        <a href="/seller/inventory" class="flex items-center p-3 rounded-lg bg-blue-500 transition-colors duration-200">
          <i class="fas fa-box w-5 mr-3"></i>
          Inventory
        </a>
        <a href="/seller/orders" class="flex items-center p-3 rounded-lg hover:bg-blue-500 transition-colors duration-200">
          <i class="fas fa-shopping-bag w-5 mr-3"></i>
          Orders
        </a>
      </nav>
    </aside>

    <!-- Main Content -->
    <main class="flex-1 p-4 lg:p-8 lg:ml-64">
      <!-- Top Bar with Actions -->
      <div class="mb-8 flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <div class="flex flex-col sm:flex-row sm:items-center gap-4">
          <h1 class="text-2xl font-bold text-gray-800">Inventory Management</h1>
          <div class="relative">
            <input type="text" placeholder="Search products..." class="pl-10 pr-4 py-2 rounded-lg border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500">
            <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
          </div>
        </div>
        
        <div class="flex flex-wrap gap-2">
          <button class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center">
            <i class="fas fa-plus mr-2"></i>Add Product
          </button>
          <button class="px-4 py-2 border border-gray-200 rounded-lg hover:bg-gray-50">
            <i class="fas fa-file-export mr-2"></i>Export
          </button>
          <button class="px-4 py-2 border border-gray-200 rounded-lg hover:bg-gray-50">
            <i class="fas fa-file-import mr-2"></i>Import
          </button>
        </div>
      </div>

      <!-- Inventory Stats -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between mb-4">
            <div class="p-2 bg-green-100 rounded-lg">
              <i class="fas fa-box text-green-600"></i>
            </div>
            <span class="text-sm text-gray-500">Total Products</span>
          </div>
          <h3 class="text-2xl font-bold"><%= stats.totalProducts %></h3>
          <p class="text-green-600 text-sm mt-2">
            <i class="fas fa-arrow-up mr-1"></i>
            <span>+5.7% from last month</span>
          </p>
        </div>

        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between mb-4">
            <div class="p-2 bg-blue-100 rounded-lg">
              <i class="fas fa-warehouse text-blue-600"></i>
            </div>
            <span class="text-sm text-gray-500">Total Stock</span>
          </div>
          <h3 class="text-2xl font-bold"><%= stats.totalStock %></h3>
          <p class="text-gray-500 text-sm mt-2">Across all variants</p>
        </div>

        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between mb-4">
            <div class="p-2 bg-yellow-100 rounded-lg">
              <i class="fas fa-exclamation-triangle text-yellow-600"></i>
            </div>
            <span class="text-sm text-gray-500">Low Stock Alerts</span>
          </div>
          <h3 class="text-2xl font-bold text-yellow-600"><%= stats.lowStockCount %></h3>
          <p class="text-gray-500 text-sm mt-2"><%= stats.lowStockCount %> products below threshold</p>
        </div>

        <div class="bg-white p-6 rounded-xl shadow-sm">
          <div class="flex items-center justify-between mb-4">
            <div class="p-2 bg-red-100 rounded-lg">
              <i class="fas fa-times-circle text-red-600"></i>
            </div>
            <span class="text-sm text-gray-500">Out of Stock</span>
          </div>
          <h3 class="text-2xl font-bold text-red-600"><%= stats.outOfStockCount %></h3>
          <p class="text-gray-500 text-sm mt-2">Needs immediate attention</p>
        </div>
      </div>

      <!-- Batch Actions -->
      <div class="bg-white p-4 rounded-xl shadow-sm mb-6">
        <div class="batch-actions flex flex-wrap gap-2">
          <button class="px-4 py-2 text-sm border border-gray-200 rounded-lg hover:bg-gray-50">
            <i class="fas fa-tag mr-2"></i>Update Prices
          </button>
          <button class="px-4 py-2 text-sm border border-gray-200 rounded-lg hover:bg-gray-50">
            <i class="fas fa-boxes mr-2"></i>Update Stock
          </button>
          <button class="px-4 py-2 text-sm border border-gray-200 rounded-lg hover:bg-gray-50">
            <i class="fas fa-archive mr-2"></i>Archive Selected
          </button>
          <button class="px-4 py-2 text-sm border border-gray-200 rounded-lg hover:bg-gray-50">
            <i class="fas fa-trash mr-2"></i>Delete Selected
          </button>
        </div>
      </div>

      <!-- Products Table -->
      <div class="bg-white rounded-xl shadow-sm overflow-hidden">
        <div class="overflow-x-auto">
          <table class="w-full">
            <thead class="bg-gray-50">
              <tr>
                <th class="py-4 px-4 text-left">
                  <input type="checkbox" class="rounded border-gray-300">
                </th>
                <th class="py-4 px-4 text-left">Product</th>
                <th class="py-4 px-4 text-left">SKU</th>
                <th class="py-4 px-4 text-left">Category</th>
                <th class="py-4 px-4 text-left">Stock</th>
                <th class="py-4 px-4 text-left">Price</th>
                <th class="py-4 px-4 text-left">Status</th>
                <th class="py-4 px-4 text-left">Actions</th>
              </tr>
            </thead>
            <tbody class="divide-y">
              <% products.forEach(function(product) { %>
                <tr class="group hover:bg-gray-50">
                  <td class="py-4 px-4">
                    <input type="checkbox" class="rounded border-gray-300">
                  </td>
                  <td class="py-4 px-4">
                    <div class="flex items-center space-x-3">
                      <img src="<%= product.image %>" alt="<%= product.name %>" class="w-12 h-12 rounded-lg object-cover">
                      <div>
                        <p class="font-medium text-gray-800"><%= product.name %></p>
                        <p class="text-sm text-gray-500"><%= product.variants.length %> variants</p>
                      </div>
                    </div>
                  </td>
                  <td class="py-4 px-4 text-gray-600"><%= product.sku %></td>
                  <td class="py-4 px-4">
                    <span class="px-2 py-1 bg-gray-100 rounded-full text-sm"><%= product.category %></span>
                  </td>
                  <td class="py-4 px-4">
                    <% if (product.stock <= product.lowStockThreshold) { %>
                      <span class="text-yellow-600">
                        <i class="fas fa-exclamation-triangle mr-1"></i><%= product.stock %>
                      </span>
                    <% } else { %>
                      <%= product.stock %>
                    <% } %>
                  </td>
                  <td class="py-4 px-4">KES <%= product.price.toLocaleString() %></td>
                  <td class="py-4 px-4">
                    <span class="px-2 py-1 rounded-full text-sm
                      <% if (product.status === 'active') { %>
                        bg-green-100 text-green-800
                      <% } else if (product.status === 'draft') { %>
                        bg-gray-100 text-gray-800
                      <% } else { %>
                        bg-red-100 text-red-800
                      <% } %>
                    ">
                      <%= product.status.charAt(0).toUpperCase() + product.status.slice(1) %>
                    </span>
                  </td>
                  <td class="py-4 px-4">
                    <div class="invisible group-hover:visible flex items-center space-x-2">
                      <button class="p-1 hover:text-blue-600">
                        <i class="fas fa-edit"></i>
                      </button>
                      <button class="p-1 hover:text-blue-600">
                        <i class="fas fa-copy"></i>
                      </button>
                      <button class="p-1 hover:text-red-600">
                        <i class="fas fa-trash"></i>
                      </button>
                    </div>
                  </td>
                </tr>

                <!-- Variant Row (Initially Hidden) -->
                <tr class="bg-gray-50 hidden">
                  <td colspan="8" class="py-4 px-8">
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                      <% product.variants.forEach(function(variant) { %>
                        <div class="bg-white p-4 rounded-lg shadow-sm">
                          <div class="flex items-center justify-between mb-2">
                            <h4 class="font-medium"><%= variant.name %></h4>
                            <span class="text-sm text-gray-500">SKU: <%= variant.sku %></span>
                          </div>
                          <div class="grid grid-cols-2 gap-2 text-sm">
                            <div>
                              <p class="text-gray-500">Stock</p>
                              <p class="font-medium"><%= variant.stock %></p>
                            </div>
                            <div>
                              <p class="text-gray-500">Price</p>
                              <p class="font-medium">KES <%= variant.price.toLocaleString() %></p>
                            </div>
                          </div>
                        </div>
                      <% }); %>
                    </div>
                  </td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <div class="p-4 border-t flex items-center justify-between">
          <p class="text-gray-500">
            Showing <%= ((pagination.currentPage - 1) * pagination.limit) + 1 %> 
            to <%= Math.min(pagination.currentPage * pagination.limit, pagination.totalProducts) %> 
            of <%= pagination.totalProducts %> products
          </p>
          <div class="flex space-x-2">
            <button class="px-4 py-2 border rounded-lg hover:bg-gray-50 <%= !pagination.hasPrevPage ? 'opacity-50 cursor-not-allowed' : '' %>"
                    <%= !pagination.hasPrevPage ? 'disabled' : '' %>>
              Previous
            </button>
            <button class="px-4 py-2 border rounded-lg hover:bg-gray-50 <%= !pagination.hasNextPage ? 'opacity-50 cursor-not-allowed' : '' %>"
                    <%= !pagination.hasNextPage ? 'disabled' : '' %>>
              Next
            </button>
          </div>
        </div>
      </div>
    </main>
  </div>
<script>
    // Mobile menu toggle
const mobileMenuButton = document.getElementById('mobile-menu-button');
const sidebar = document.getElementById('sidebar');

mobileMenuButton.addEventListener('click', () => {
  sidebar.classList.toggle('-translate-x-full');
});

// Toggle variant rows
document.querySelectorAll('tr').forEach(row => {
  if (!row.nextElementSibling?.classList.contains('bg-gray-50')) return;
  
  row.addEventListener('click', (e) => {
    // Don't toggle if clicking on checkboxes or action buttons
    if (e.target.closest('input[type="checkbox"]') || e.target.closest('button')) return;
    
    const variantRow = row.nextElementSibling;
    variantRow.classList.toggle('hidden');
    
    // Add subtle animation
    if (!variantRow.classList.contains('hidden')) {
      variantRow.style.opacity = '0';
      setTimeout(() => {
        variantRow.style.opacity = '1';
        variantRow.style.transition = 'opacity 0.3s ease-in-out';
      }, 0);
    }
  });
});

// Batch selection functionality
const mainCheckbox = document.querySelector('thead input[type="checkbox"]');
const productCheckboxes = document.querySelectorAll('tbody input[type="checkbox"]');
const batchActions = document.querySelectorAll('.batch-actions button');

mainCheckbox.addEventListener('change', () => {
  productCheckboxes.forEach(checkbox => {
    checkbox.checked = mainCheckbox.checked;
  });
  updateBatchActionsState();
});

productCheckboxes.forEach(checkbox => {
  checkbox.addEventListener('change', () => {
    const allChecked = Array.from(productCheckboxes).every(cb => cb.checked);
    const someChecked = Array.from(productCheckboxes).some(cb => cb.checked);
    mainCheckbox.checked = allChecked;
    mainCheckbox.indeterminate = someChecked && !allChecked;
    updateBatchActionsState();
  });
});

function updateBatchActionsState() {
  const hasSelection = Array.from(productCheckboxes).some(cb => cb.checked);
  batchActions.forEach(button => {
    button.disabled = !hasSelection;
    if (hasSelection) {
      button.classList.remove('opacity-50', 'cursor-not-allowed');
    } else {
      button.classList.add('opacity-50', 'cursor-not-allowed');
    }
  });
}

// Search functionality
const searchInput = document.querySelector('input[placeholder="Search products..."]');
const productRows = document.querySelectorAll('tbody tr:not(.bg-gray-50)');

searchInput.addEventListener('input', () => {
  const searchTerm = searchInput.value.toLowerCase();
  
  productRows.forEach(row => {
    const productName = row.querySelector('.font-medium').textContent.toLowerCase();
    const sku = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
    const category = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
    
    const matches = productName.includes(searchTerm) || 
                   sku.includes(searchTerm) || 
                   category.includes(searchTerm);
    
    row.style.display = matches ? '' : 'none';
    // Hide/show variant row accordingly
    if (row.nextElementSibling?.classList.contains('bg-gray-50')) {
      row.nextElementSibling.style.display = matches ? '' : 'none';
    }
  });
});

// Confirm delete action
document.querySelectorAll('.fa-trash').forEach(deleteBtn => {
  deleteBtn.closest('button').addEventListener('click', (e) => {
    e.stopPropagation();
    if (confirm('Are you sure you want to delete this product? This action cannot be undone.')) {
      // Add delete functionality here
      console.log('Delete product');
    }
  });
});

// Export functionality
document.querySelector('button:has(.fa-file-export)').addEventListener('click', () => {
  const selectedProducts = Array.from(productCheckboxes)
    .filter(cb => cb.checked)
    .map(cb => {
      const row = cb.closest('tr');
      return {
        name: row.querySelector('.font-medium').textContent,
        sku: row.querySelector('td:nth-child(3)').textContent,
        category: row.querySelector('td:nth-child(4)').textContent,
        stock: row.querySelector('td:nth-child(5)').textContent,
        price: row.querySelector('td:nth-child(6)').textContent,
      };
    });

  if (selectedProducts.length === 0) {
    alert('Please select products to export');
    return;
  }

  // Create CSV content
  const csvContent = [
    ['Name', 'SKU', 'Category', 'Stock', 'Price'],
    ...selectedProducts.map(p => [p.name, p.sku, p.category, p.stock, p.price])
  ].map(row => row.join(',')).join('\n');

  // Trigger download
  const blob = new Blob([csvContent], { type: 'text/csv' });
  const url = window.URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.setAttribute('href', url);
  a.setAttribute('download', `inventory-export-${new Date().toISOString().split('T')[0]}.csv`);
  a.click();
  window.URL.revokeObjectURL(url);
});
</script>
</body>
</html>