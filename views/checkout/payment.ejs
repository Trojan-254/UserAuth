<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment | ZetuPay</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .payment-option {
            transition: all 0.3s ease;
        }
        
        .payment-option:hover {
            background-color: #fff7ed;
            transform: translateY(-2px);
        }

        .radio-circle {
            width: 24px;
            height: 24px;
            border: 2px solid #d1d5db;
            border-radius: 50%;
            position: relative;
            transition: all 0.2s ease;
        }

        .radio-circle::after {
            content: '';
            position: absolute;
            width: 12px;
            height: 12px;
            background: #ea580c;
            border-radius: 50%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%) scale(0);
            transition: transform 0.2s ease;
        }

        .payment-option input:checked ~ .radio-circle {
            border-color: #ea580c;
        }

        .payment-option input:checked ~ .radio-circle::after {
            transform: translate(-50%, -50%) scale(1);
        }
        
        .payment-option input:checked ~ .radio-content {
            background-color: #fff7ed;
            border-color: #ea580c;
        }

        .modal {
            display: none;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .modal.show {
            display: flex;
            opacity: 1;
            animation: fadeIn 0.3s ease-out;
        }
        
        .shimmer {
            background: linear-gradient(90deg, #fb923c 0%, #fed7aa 50%, #fb923c 100%);
            background-size: 200% 100%;
            animation: shimmer 2s infinite;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        
        @keyframes shimmer {
            0% { background-position: 200% 0; }
            100% { background-position: -200% 0; }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-orange-50 via-white to-gray-50 min-h-screen">
    <div class="max-w-4xl mx-auto px-4 py-12">
        <!-- Logo -->
        <div class="flex justify-center mb-8">
            <div class="bg-white p-4 rounded-xl shadow-lg transform hover:scale-105 transition-transform">
                <div class="text-3xl font-bold flex items-center">
                    <span class="shimmer">Zetu</span>
                    <span class="text-gray-800">Pay</span>
                </div>
            </div>
        </div>

        <div class="grid md:grid-cols-5 gap-8">
            <!-- Payment Methods Section -->
            <div class="md:col-span-3 bg-white rounded-xl shadow-xl p-8 border border-orange-100">
                <h2 class="text-2xl font-semibold text-gray-800 mb-6">Select Payment Method</h2>
                <div class="space-y-4">
                    <!-- M-Pesa Option -->
                    <label class="block payment-option rounded-xl cursor-pointer">
                        <div class="radio-content p-6 border-2 rounded-xl flex items-center gap-4">
                            <input type="radio" name="paymentMethod" value="mpesa" class="hidden" checked>
                            <img src="/images/mpesa-img.png" alt="M-Pesa" class="h-10 w-10 object-contain">
                            <div class="flex-1">
                                <span class="text-gray-800 font-medium block">M-Pesa</span>
                                <span class="text-sm text-gray-500">Fast & Secure</span>
                            </div>
                            <div class="radio-circle"></div>
                        </div>
                    </label>

                    <!-- Airtel Money Option -->
                    <label class="block payment-option rounded-xl cursor-pointer">
                        <div class="radio-content p-6 border-2 rounded-xl flex items-center gap-4">
                            <input type="radio" name="paymentMethod" value="airtel" class="hidden">
                            <img src="/images/airtel-img.png" alt="Airtel Money" class="h-10 w-10 object-contain">
                            <div class="flex-1">
                                <span class="text-gray-800 font-medium block">Airtel Money</span>
                                <span class="text-sm text-gray-500">Simple & Quick</span>
                            </div>
                            <div class="radio-circle"></div>
                        </div>
                    </label>

                    <!-- Payment Button -->
                    <button id="payNowBtn" class="w-full mt-8 bg-orange-500 text-white py-4 rounded-xl text-lg font-semibold hover:bg-orange-600 transition-colors transform hover:scale-[1.02] active:scale-[0.98] duration-200 shadow-lg hover:shadow-orange-300">
                        Pay Now
                    </button>
                </div>
            </div>

            <!-- Order Summary Section -->
             <div class="md:col-span-2 bg-white rounded-xl shadow-xl p-8 border border-orange-100 h-fit">
                <h2 class="text-2xl font-semibold text-gray-800 mb-6">Order Summary</h2>
                <div class="space-y-6">
                    <!-- Order Items - Now using dynamic data -->
                    <div class="space-y-4">
                        <% order.items.forEach(item => { %>
                            <div class="flex justify-between items-center p-4 bg-orange-50 rounded-lg">
                                <div class="flex flex-col">
                                    <span class="text-gray-700"><%= item.product.name %> Ã— <%= item.quantity %></span>
                                    <% if (item.size) { %>
                                        <span class="text-sm text-gray-500">Size: <%= item.size %></span>
                                    <% } %>
                                </div>
                                <span class="font-medium text-gray-900">KES <%= (item.product.price * item.quantity) %></span>
                            </div>
                        <% }); %>
                    </div>

                    <!-- Totals -->
                    <div class="space-y-4 pt-6 border-t">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Subtotal</span>
                            <span class="font-medium text-gray-900">KES <%= order.subtotal %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Shipping</span>
                            <span class="font-medium text-gray-900">KES <%= order.shipping %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Tax (16%)</span>
                            <span class="font-medium text-gray-900">KES <%= order.tax %></span>
                        </div>
                        <div class="flex justify-between text-xl font-bold pt-4 border-t">
                            <span>Total to Pay</span>
                            <span class="text-orange-500">KES <%= order.totalAmount %></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
                           

        <!-- Modals -->
        <!-- M-Pesa Modal -->
        <div id="mpesaModal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div class="bg-white rounded-xl p-8 w-full max-w-md relative transform transition-all">
                <button id="closeModal" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
                <div class="flex items-center gap-4 mb-6">
                    <img src="/images/mpesa-img.png" alt="M-Pesa" class="h-12 w-12 object-contain">
                    <h2 class="text-2xl font-semibold text-gray-800">M-Pesa Payment</h2>
                </div>
                <form id="mpesaPaymentForm">
                    <div class="space-y-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                            <input id="mpesaNumber" type="tel" placeholder="254712345678" 
                                class="w-full p-4 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all">
                            <p class="mt-2 text-sm text-gray-500">Format: 254712345678</p>
                        </div>
                        <div class="flex justify-end space-x-4">
                            <button type="button" id="cancelModal" class="px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                                Cancel
                            </button>
                            <button type="submit" id="confirmPayment" class="px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors">
                                Confirm Payment
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

        <!-- Airtel Money Modal -->
        <div id="airtelModal" class="modal fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div class="bg-white rounded-xl p-8 w-full max-w-md relative transform transition-all">
                <button id="closeAirtelModal" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
                <div class="flex items-center gap-4 mb-6">
                    <img src="/images/airtel-img.png" alt="Airtel Money" class="h-12 w-12 object-contain">
                    <h2 class="text-2xl font-semibold text-gray-800">Airtel Money Payment</h2>
                </div>
                <div class="space-y-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                        <input id="airtelNumber" type="tel" placeholder="254712345678" 
                            class="w-full p-4 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all">
                        <p class="mt-2 text-sm text-gray-500">Format: 254712345678</p>
                    </div>
                    <div class="flex justify-end space-x-4">
                        <button id="cancelAirtelModal" class="px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
                            Cancel
                        </button>
                        <button id="confirmAirtelPayment" class="px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors">
                            Confirm Payment
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Get DOM elements
        const payNowBtn = document.getElementById('payNowBtn');
        const mpesaModal = document.getElementById('mpesaModal');
        const mpesaPaymentForm = document.getElementById('mpesaPaymentForm');
        const mpesaNumberInput = document.getElementById('mpesaNumber');
        const closeModalBtn = document.getElementById('closeModal');
        const cancelModalBtn = document.getElementById('cancelModal');

        const paymentStatus = {
           checkInterval: null,
           maxAttempts: 24,
           attempts: 0
        };

        // Store order ID from backend
        const orderId = '<%= order._id %>';

        function showModal() {
            mpesaModal.classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function hideModal() {
            mpesaModal.classList.remove('show');
            document.body.style.overflow = '';
            mpesaNumberInput.value = '';
        }

        function validatePhoneNumber(number) {
            return /^254\d{9}$/.test(number.trim());
        }

        // Event Listeners
        payNowBtn.addEventListener('click', showModal);

        [closeModalBtn, cancelModalBtn].forEach(btn => {
            btn.addEventListener('click', hideModal);
        });

        mpesaModal.addEventListener('click', (e) => {
            if (e.target === mpesaModal) {
                hideModal();
            }
        });

        mpesaPaymentForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const phoneNumber = mpesaNumberInput.value.trim();
            if (!validatePhoneNumber(phoneNumber)) {
                alert('Please enter a valid M-Pesa number (Format: 254712345678)');
                return;
            }
            const submitButton = document.getElementById('confirmPayment');

            try {

                // Disable submit button and show loading state
                submitButton.disabled = true;
                submitButton.innerHTML = 'Processing...';
                const response = await fetch('/api/payments/mpesa/initiate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        orderId: '<%= order._id %>,
                        phoneNumber: phoneNumber
                    })
                });

                const data = await response.json();

                if (!response.ok) {
                   throw new Error(data.message || 'Payment initiation failed');
                }


                // Show success message and start checking payment status
                alert(data.message || 'Please check your phone for the M-Pesa prompt');
                hideModal();
                startPaymentStatusCheck();
            } catch (error) {
                alert('Payment processing failed: ' + error.message);
                console.error('Payment error:', error);
            } finally {
               // Re-enable submit button and restore original text
               submitButton.disabled = false;
               submitButton.innerHTML = 'Confirm Payment';
            }
        });

        // Function to check payment status
        async function checkPaymentStatus(orderId) {
            try {
                const response = await fetch(`/api/payments/status/${orderId}`);
                const data = await response.json();
                
                if (data.status === 'completed') {
                    window.location.href = `/orders/${orderId}`;
                    return true;
                }
                return false;
            } catch (error) {
                console.error('Error checking payment status:', error);
                return false;
            }
        }

        function startPaymentStatusCheck() {
    // Clear any existing interval
    if (paymentStatus.checkInterval) {
        clearInterval(paymentStatus.checkInterval);
    }
    
    paymentStatus.attempts = 0;
    
    // Check payment status every 5 seconds
    paymentStatus.checkInterval = setInterval(async () => {
        paymentStatus.attempts++;
        
        try {
            const response = await fetch(`/api/payments/status/<%= order._id %>`);
            const data = await response.json();
            
            if (data.success && data.status === 'completed') {
                // Payment successful - redirect to order confirmation
                clearInterval(paymentStatus.checkInterval);
                window.location.href = `/orders/<%= order._id %>`;
                return;
            }
            
            // Stop checking after max attempts (2 minutes)
            if (paymentStatus.attempts >= paymentStatus.maxAttempts) {
                clearInterval(paymentStatus.checkInterval);
                alert('Payment status check timed out. Please check your order status in your account.');
            }
            
        } catch (error) {
            console.error('Error checking payment status:', error);
            clearInterval(paymentStatus.checkInterval);
        }
    }, 5000); // Check every 5 seconds
}

// Add this to validate phone numbers on input
mpesaNumberInput.addEventListener('input', (e) => {
    const input = e.target;
    const value = input.value.replace(/\D/g, ''); // Remove non-digits
    
    // Ensure number starts with 254
    if (!value.startsWith('254')) {
        input.value = '254';
    } else {
        input.value = value;
    }
    
    // Limit to correct length (254 + 9 digits)
    if (value.length > 12) {
        input.value = value.slice(0, 12);
    }
});

        // Function to start polling payment status
        function startPaymentStatusCheck(orderId) {
            const pollInterval = setInterval(async () => {
                const isComplete = await checkPaymentStatus(orderId);
                if (isComplete) {
                    clearInterval(pollInterval);
                }
            }, 5000); // Check every 5 seconds

            // Stop polling after 2 minutes
            setTimeout(() => {
                clearInterval(pollInterval);
            }, 120000);
        }

        // Handle escape key
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                hideModal();
            }
        });
    </script>




</body>
</html>
