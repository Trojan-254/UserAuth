<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Cart | Zetu Cart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <div class="flex items-center">
                    <a href="/" class="flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-orange-500" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"/>
                        </svg>
                        <span class="ml-2 text-xl font-bold text-gray-800">Zetu Cart</span>
                    </a>
                </div>
                <div class="flex items-center space-x-4">
                    <a href="/products/all" class="text-gray-600 hover:text-orange-500">Shop</a>
                    <a href="/orders/my-orders" class="text-gray-600 hover:text-orange-500">Orders</a>
                    <a href="/account" class="text-gray-600 hover:text-orange-500">Account</a>
                </div>
            </div>
        </div>
    </nav>

    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="flex justify-between items-center mb-8">
            <h1 class="text-2xl font-bold text-gray-900">Shopping Cart</h1>
            <a href="/products/all" class="text-orange-500 hover:text-orange-600">
                <i class="fas fa-arrow-left mr-2"></i>Continue Shopping
            </a>
        </div>

        <% if (!cart || cart.items.length === 0) { %>
            <div class="text-center py-16 bg-white rounded-lg shadow-sm">
                <div class="mb-4">
                    <i class="fas fa-shopping-cart text-6xl text-gray-300"></i>
                </div>
                <h2 class="text-xl font-semibold text-gray-900 mb-2">Your cart is empty</h2>
                <p class="text-gray-600 mb-6">Looks like you haven't added anything to your cart yet.</p>
                <a href="/products/all" class="inline-block bg-orange-500 text-white px-6 py-3 rounded-lg hover:bg-orange-600 transition-colors">
                    Start Shopping
                </a>
            </div>
        <% } else { %>
            <div class="flex flex-col lg:flex-row gap-8">
                <!-- Cart Items -->
                <div class="flex-grow">
                    <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                        <div class="divide-y divide-gray-200">
                            <% cart.items.forEach(item => { %>
                                <div class="p-6 flex space-x-6" data-product-id="<%= item.product._id %>">
                                    <img src="/uploads/<%= item.product.mainImage %>" alt="<%= item.product.name %>" class="w-24 h-24 object-cover rounded-lg">
                                    <div class="flex-grow">
                                        <div class="flex justify-between items-start">
                                            <div>
                                                <h3 class="text-lg font-semibold text-gray-900"><%= item.product.name %></h3>
                                                <p class="text-sm text-gray-500"><%= item.product.category %></p>
                                            </div>
                                            <button onclick="removeFromCart('<%= item.product._id %>')" class="text-gray-400 hover:text-red-500">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                        <div class="mt-4 flex items-center justify-between">
                                            <div class="flex items-center space-x-2">
                                                <button class="qty-btn minus w-8 h-8 rounded-full border border-gray-200 flex items-center justify-center hover:border-orange-500 hover:text-orange-500">
                                                    <i class="fas fa-minus"></i>
                                                </button>
                                                <input type="number" value="<%= item.quantity %>" min="1" class="quantity-input w-16 text-center border-gray-200 rounded-lg focus:ring-orange-500 focus:border-orange-500">
                                                <button class="qty-btn plus w-8 h-8 rounded-full border border-gray-200 flex items-center justify-center hover:border-orange-500 hover:text-orange-500">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                            <div class="text-right">
                                                <p class="text-lg font-semibold text-gray-900">KES <%= item.price.toLocaleString() %></p>
                                                <p class="text-sm text-gray-500">KES <%= (item.price * item.quantity).toLocaleString() %> total</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>

                <!-- Order Summary -->
                <div class="lg:w-96">
                    <div class="bg-white rounded-lg shadow-sm p-6">
                        <h2 class="text-lg font-semibold text-gray-900 mb-4">Order Summary</h2>
                        <div class="space-y-3 text-sm">
                            <div class="flex justify-between text-gray-600">
                                <span>Subtotal (<%= cart.items.reduce((acc, item) => acc + item.quantity, 0) %> items)</span>
                                <span>KES <%= cart.totalAmount.toLocaleString() %></span>
                            </div>
                            <div class="flex justify-between text-gray-600">
                                <span>Shipping Estimate</span>
                                <span>KES 0</span>
                            </div>
                            <div class="flex justify-between text-gray-600">
                                <span>Tax Estimate</span>
                                <span>KES <%= (cart.totalAmount * 0.16).toLocaleString() %></span>
                            </div>
                            <div class="pt-3 border-t border-gray-200">
                                <div class="flex justify-between text-lg font-semibold text-gray-900">
                                    <span>Order Total</span>
                                    <span>KES <%= (cart.totalAmount + 0 + (cart.totalAmount * 0.16)).toLocaleString() %></span>
                                </div>
                            </div>
                        </div>

                        <!-- Coupon Code -->
                        <div class="mt-6">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Coupon Code</label>
                            <div class="flex space-x-2">
                                <input type="text" placeholder="Enter code" class="flex-grow rounded-lg border-gray-200 focus:ring-orange-500 focus:border-orange-500">
                                <button class="px-4 py-2 bg-gray-100 text-gray-600 rounded-lg hover:bg-gray-200 transition-colors">
                                    Apply
                                </button>
                            </div>
                        </div>

                        <a href="/checkout" class="mt-6 w-full bg-orange-500 text-white py-3 px-4 rounded-lg text-center inline-block hover:bg-orange-600 transition-colors">
                            Proceed to Checkout
                        </a>

                        <div class="mt-4 flex items-center justify-center space-x-4 text-gray-500">
                            <i class="fas fa-lock"></i>
                            <i class="fab fa-cc-visa"></i>
                            <i class="fab fa-cc-mastercard"></i>
                            <i class="fab fa-cc-amex"></i>
                            <i class="fab fa-cc-paypal"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recommended Products -->
            <div class="mt-12">
                <h2 class="text-xl font-semibold text-gray-900 mb-6">You Might Also Like</h2>
                <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                    <% for(let i = 0; i < 4; i++) { %>
                        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                            <img src="/api/placeholder/300/200" alt="Product" class="w-full h-48 object-cover">
                            <div class="p-4">
                                <h3 class="font-semibold text-gray-800">Sample Product</h3>
                                <p class="text-gray-600 text-sm">KES 2,999</p>
                                <button class="mt-2 w-full bg-orange-500 text-white py-2 rounded-lg hover:bg-orange-600 transition-colors">
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        <% } %>
    </main>

    <script>
        // Update quantity
        async function updateQuantity(productId, quantity) {
            try {
                const response = await fetch('/cart/update', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity })
                });
                
                if (response.ok) {
                    location.reload(); // Refresh to update totals
                }
            } catch (error) {
                console.error('Error updating quantity:', error);
            }
        }

        // Remove item from cart
        async function removeFromCart(productId) {
            if (!confirm('Are you sure you want to remove this item?')) return;
            
            try {
                const response = await fetch(`/cart/remove/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    location.reload();
                }
            } catch (error) {
                console.error('Error removing item:', error);
            }
        }

        // Quantity controls
        document.querySelectorAll('.qty-btn').forEach(button => {
            button.addEventListener('click', function() {
                const container = this.closest('[data-product-id]');
                const productId = container.dataset.productId;
                const input = this.parentElement.querySelector('.quantity-input');
                const currentValue = parseInt(input.value);
                
                if (this.classList.contains('minus')) {
                    if (currentValue > 1) {
                        input.value = currentValue - 1;
                        updateQuantity(productId, currentValue - 1);
                    }
                } else {
                    input.value = currentValue + 1;
                    updateQuantity(productId, currentValue + 1);
                }
            });
        });

        // Manual quantity input
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', function() {
                const container = this.closest('[data-product-id]');
                const productId = container.dataset.productId;
                const newValue = parseInt(this.value);
                
                if (newValue >= 1) {
                    updateQuantity(productId, newValue);
                } else {
                    this.value = 1;
                    updateQuantity(productId, 1);
                }
            });
        });
    </script>
</body>
</html>
